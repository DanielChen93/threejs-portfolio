name: Deploy Dockerized Vite App to AWS ECS

on:
  push:
    branches:
      - main # Trigger deployment on push to the main branch
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Build Docker image
        run: |
          docker build -t threejs-portfolio .

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::686255942583:role/GitHubActionsECRRole # Role ARN
          aws-region: ap-southeast-2 # Melbourne, Australia region

      - name: Authenticate Docker with Amazon ECR
        run: |
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 686255942583.dkr.ecr.ap-southeast-2.amazonaws.com

      - name: Create ECR repository (if not exists)
        run: |
          aws ecr describe-repositories --repository-name threejs-portfolio || aws ecr create-repository --repository-name threejs-portfolio --region ap-southeast-2

      - name: Tag Docker image for ECR
        run: |
          docker tag threejs-portfolio:latest 686255942583.dkr.ecr.ap-southeast-2.amazonaws.com/threejs-portfolio:latest

      - name: Push Docker image to ECR
        run: |
          docker push 686255942583.dkr.ecr.ap-southeast-2.amazonaws.com/threejs-portfolio:latest

      - name: Deploy to ECS (or Elastic Beanstalk)
        run: |
          # You can use ECS or Elastic Beanstalk to deploy the image. Here is an example for ECS:
          ecs_service_update_command="aws ecs update-service --cluster YOUR_CLUSTER_NAME --service YOUR_SERVICE_NAME --force-new-deployment --region ap-southeast-2"
          eval $ecs_service_update_command
